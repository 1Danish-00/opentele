<!-- vim: syntax=Markdown -->
# Account

## Table of Contents

- [Account](#account)
  - [Table of Contents](#table-of-contents)
  - [Account Objects](#account-objects)
      - [Arguments:](#arguments)
      - [Raises:](#raises)
      - [Account.\_\_init\_\_](#account__init__)
      - [Arguments:](#arguments-1)
      - [Remarks:](#remarks)
      - [Account.localKey](#accountlocalkey)
      - [Account.prepareToStart](#accountpreparetostart)
      - [Arguments:](#arguments-2)
      - [Returns:](#returns)
      - [Account.SaveTData](#accountsavetdata)

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L1)

<a id="td.account.Account"></a>

## Account Objects

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L511)

```python
class Account(BaseObject)
```

Telegram Desktop account
Pro account
Test New

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| api | **[APIData](../../Authorization/APIData#apidata.APIData)** | __required__ | The API this acount is using |
| basePath | `#!python str` | __required__ | The folder where tdata is stored |
| owner | `TDesktop` | __required__ | TDesktop client owner of this account |
| localKey | `AuthKey` | __required__ | Key used to encrypt and decrypt tdata |
| authKey | `AuthKey` | __required__ | The actual key used to authorize this acocunt |
| UserId | `#!python int` | __required__ | User ID of this account |
| MainDcId | `DcId` | __required__ | The main Data Center ID this account connects to |

#### Raises:

`OpenTeleException` - Failed


<a id="td.account.Account.__init__"></a>

#### Account.\_\_init\_\_

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L545)

```python
def __init__(owner: td.TDesktop, basePath: str = None, api: Union[Type[APIData], APIData] = APITemplate.TelegramDesktop, keyFile: str = None, index: int = 0) -> None
```

Setup a tdesktop account

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| owner | **[td.TDesktop](../TDesktop#td.tdesktop.TDesktop)** | __required__ | TDesktop client owner of this account |
| basePath | `#!python str` | None | The folder where tdata is stored |
| api | `Type[APIData]` \| **[APIData](../../Authorization/APIData#apidata.APIData)** \| **[APITemplate.TelegramDesktop](../../Authorization/APITemplate#apidata.APITemplate.TelegramDesktop)** | __required__ | The **[APIData](../../Authorization/APIData#apidata.APIData)** to use |
| keyFile | `#!python str` \| `#!python None` | __required__ | [description] |
| index | `#!python int` \| `0` | __required__ | [description] |

#### Remarks:

- Notes - **[prepareToStart()](../Account#td.account.Account.prepareToStart)** must be call after initalizing the object.
- Notes - **[prepareToStart()](../Account#td.account.Account.prepareToStart)** must be call after initalizing the object.


<a id="td.account.Account.localKey"></a>

#### Account.localKey

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L625)

```python
@localKey.setter
def localKey(value)
```

localKey setter is intended for internal usage

<a id="td.account.Account.prepareToStart"></a>

#### Account.prepareToStart

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L662)

```python
def prepareToStart(localKey: td.AuthKey) -> td.MTP.Config
```

Prepare the account before starting it

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| localKey | **[td.AuthKey](../AuthKey#td.auth.AuthKey)** | __required__ | **[APIData](../../Authorization/APIData#apidata.APIData)** |

#### Returns:

**[td.MTP.Config](../MTP#td.mtp.MTP.Config)** - [description]


<a id="td.account.Account.SaveTData"></a>

#### Account.SaveTData

[[source]](https://github.com/thedemons/opentele/blob/7dbe214f9a0a2bd218d387a4d7dc60e9b05e4c17/src\td\account.py#L770)

```python
def SaveTData(basePath: str = None, passcode: str = None, keyFile: str = None) -> None
```

Save this account to a folder
[extended_summary]

Args:
    basePath (str, optional): The path to the folder. Defaults to None.
    passcode (str, optional): Lock the data with a passcode. Defaults to None.
    keyFile (str, optional): [description]. Defaults to None.

Examples:
    Add an account to `tdesktop` and save it to `tdata`:
```python
    telethonClient = TelegramClient("sessionFile", API_ID, API_HASH)
    td = TDesktop("new_tdata")
    account = Account.FromTelethon(telethonClient, owner=td) # add this account to td
    td.SaveTData()
```


