<!-- vim: syntax=Markdown -->

# Account

## Table of Contents

* [Account](#td.account.Account)
  * [\_\_init\_\_](#td.account.Account.__init__)
  * [localKey](#td.account.Account.localKey)
  * [prepareToStart](#td.account.Account.prepareToStart)
  * [SaveTData](#td.account.Account.SaveTData)

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L1)

<a id="td.account.Account"></a>

## Account Objects

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L511)

```python
class Account(BaseObject)
```

Telegram Desktop account
Pro account
Test New

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| api | <a class="md-typeset__obj" href="../../api-documentation/authorization/apidata#apidata-objects"><b>APIData</b></a> |  | The API this acount is using |
| basePath | <span class="md-typeset__obj">str</span> |  | The folder where tdata is stored |
| owner | <a class="md-typeset__obj" href="../telegram-desktop/tdesktop#tdesktop-objects"><b>TDesktop</b></a> |  | TDesktop client owner of this account |
| localKey | <a class="md-typeset__obj" href="../telegram-desktop/authkey#authkey-objects"><b>AuthKey</b></a> |  | Key used to encrypt and decrypt tdata |
| authKey | <a class="md-typeset__obj" href="../telegram-desktop/authkey#authkey-objects"><b>AuthKey</b></a> |  | The actual key used to authorize this acocunt |
| UserId | <span class="md-typeset__obj">int</span> |  | User ID of this account |
| MainDcId | <span class="md-typeset__obj">DcId</span> |  | The main Data Center ID this account connects to |

#### Raises:

- <span class="md-typeset__obj">OpenTeleException</span> - Failed


<a id="td.account.Account.__init__"></a>

#### Account.\_\_init\_\_

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L545)

```python
def __init__(owner: td.TDesktop, basePath: str = None, api: Union[Type[APIData], APIData] = APITemplate.TelegramDesktop, keyFile: str = None, index: int = 0) -> None
```

Setup a tdesktop account

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| owner | <a class="md-typeset__obj" href="../telegram-desktop/tdesktop#tdesktop-objects"><b>TDesktop</b></a> |  | TDesktop client owner of this account |
| basePath | <span class="md-typeset__obj">str</span> | <span class="md-typeset__const">None</span> | The folder where tdata is stored |
| api | <a class="md-typeset__obj" href="../../api-documentation/authorization/apidata#apidata-objects"><b>APIData</b></a> | <a class="md-typeset__obj" href="../../api-documentation/authorization/apitemplate#telegramdesktop-objects"><b>TelegramDesktop</b></a> | The <a class="md-typeset__obj" href="../../api-documentation/authorization/apidata#apidata-objects"><b>APIData</b></a> to use |
| keyFile | <span class="md-typeset__obj">str</span> | <span class="md-typeset__const">None</span> | [description] |
| index | <span class="md-typeset__obj">int</span> | <span class="md-typeset__const">None</span> | [description] |

#### Remarks:

- - Notes - <a class="md-typeset__function" href="../telegram-desktop/account#accountpreparetostart"><b>prepareToStart()</b></a> must be call after initalizing the object.
- - Notes - <a class="md-typeset__function" href="../telegram-desktop/account#accountpreparetostart"><b>prepareToStart()</b></a> must be call after initalizing the object.


<a id="td.account.Account.localKey"></a>

#### Account.localKey

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L625)

```python
@localKey.setter
def localKey(value)
```

localKey setter is intended for internal usage

<a id="td.account.Account.prepareToStart"></a>

#### Account.prepareToStart

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L662)

```python
def prepareToStart(localKey: td.AuthKey) -> td.MTP.Config
```

Prepare the account before starting it

#### Arguments:

| Name | Type | Default | Description |
| :--- | :--: | :-----: | :---------- |
| localKey | <a class="md-typeset__obj" href="../telegram-desktop/authkey#authkey-objects"><b>AuthKey</b></a> |  | <a class="md-typeset__obj" href="../../api-documentation/authorization/apidata#apidata-objects"><b>APIData</b></a> |

#### Returns:

- <a class="md-typeset__obj" href="../telegram-desktop/mtp#config-objects"><b>Config</b></a> - [description]


<a id="td.account.Account.SaveTData"></a>

#### Account.SaveTData

[[source]](https://github.com/thedemons/opentele/blob/bf248ac41a6f628fde8d312517f6e04693a96259/src\td\account.py#L770)

```python
def SaveTData(basePath: str = None, passcode: str = None, keyFile: str = None) -> None
```

Save this account to a folder
[extended_summary]

Args:
    basePath (str, optional): The path to the folder. Defaults to None.
    passcode (str, optional): Lock the data with a passcode. Defaults to None.
    keyFile (str, optional): [description]. Defaults to None.

Examples:
    Add an account to <span class="md-typeset__variable">tdesktop</span> and save it to <span class="md-typeset__variable">tdata</span>:
```python
    telethonClient = TelegramClient("sessionFile", API_ID, API_HASH)
    td = TDesktop("new_tdata")
    account = Account.FromTelethon(telethonClient, owner=td) # add this account to td
    td.SaveTData()
```


